// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32           = require("bs-platform/lib/js/caml_int32.js");
var Callbag$BsCallbag    = require("./Callbag.bs.js");
var Js_Callbag$BsCallbag = require("./Js_Callbag.bs.js");

Callbag$BsCallbag.forEach((function (d) {
        console.log(d);
        return /* () */0;
      }), (function (param) {
        return Callbag$BsCallbag.map((function (param) {
                      return param.charAt(0);
                    }), (function (param) {
                      return Callbag$BsCallbag.map((function (prim) {
                                    return prim.toString();
                                  }), (function (param) {
                                    return Callbag$BsCallbag.map((function (x) {
                                                  return Caml_int32.imul(x, 15);
                                                }), (function (param) {
                                                  return Callbag$BsCallbag.take(3, (function (param) {
                                                                return Callbag$BsCallbag.filter((function (x) {
                                                                              return +(x !== 3);
                                                                            }), (function (param) {
                                                                              return Callbag$BsCallbag.skip(2, (function (param) {
                                                                                            return Js_Callbag$BsCallbag.interval(100, param);
                                                                                          }), param);
                                                                            }), param);
                                                              }), param);
                                                }), param);
                                  }), param);
                    }), param);
      }));

var partial_arg = /* int array */[
  1,
  2,
  3,
  4
];

Callbag$BsCallbag.observe((function (d) {
        console.log(d);
        return /* () */0;
      }), (function (param) {
        return Callbag$BsCallbag.fromArray(partial_arg, param);
      }));

/*  Not a pure module */
